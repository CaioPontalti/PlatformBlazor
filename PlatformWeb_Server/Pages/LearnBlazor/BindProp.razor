@page "/learnBlazor/bindProp"

<div class="row">
    <h3 class="text-success">Product Individual</h3>
    <div class="col-6 border p-3">
        <h3 class="text-primary ">Product Playgroud</h3><hr />
        <div> Active: <input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive?"checked":null)" /> <br /></div>
        <div>
            Price: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" /> <br />
        </div>

        <div>
            Properties :
            <select @bind="selectedProp" class="text-danger">
                @foreach (var prop in Product.ProductProp)
                {
                    <option value="@prop.Key" class="text-primary">@prop.Value</option>
                }
            </select>
        </div>
    </div>
        
    <br />

    <div class="col-6 border p-3">
        <h3 class="text-primary ">Product Sumary</h3><hr />
        Name: @Product.Name <br />
        Active: @Product.IsActive <br />
        Price: @Product.Price <br />
        This Product is :@(Product.IsActive ? "Active" : "InActive") <br />
        Selected Prop: @selectedProp <br />
        @if (!string.IsNullOrWhiteSpace(selectedProp))
        {
            <p> Property Value : @Product.ProductProp.FirstOrDefault(p=>p.Key == selectedProp).Value </p>
        }
    </div>

    <div class="col-12">   
        <h2 class="text-success">Product Table</h2>
        <table class="table table-striped">
            @foreach(Product prod in Products)
            {
                <tr>
                    <td>
                        <input type="text" @bind-value="prod.Name" @bind-value:event="oninput">
                    </td>
                    <td>
                        <input type="text" @bind-value="prod.Price" @bind-value:event="oninput">
                    </td>
                    <td>
                        <input type="checkbox" @bind-value="prod.IsActive" checked="@(prod.IsActive?"checked":null)">
                    </td>
                </tr>
            }

        </table>

        <h2>Product Sumary</h2>
        @foreach (var prod in Products)
        {
         <p>@prod.Name [@prod.Price] is @(prod.IsActive?"Active":"Inactive")</p>   
        }

    </div>

</div>
@code {
    private string selectedProp = string.Empty;

    Product Product = new ()
    {
        Id = 1,
        Name = "Bola",
        IsActive = true,
        Price = 10,
            ProductProp = new List<Platform_Models.LearnBlazorModels.ProductProp>()
            {
                new ProductProp { Id = 1, Key = "Color", Value = "Verde"},
                new ProductProp { Id = 1, Key = "Tamanho", Value = "P"},
                new ProductProp{ Id = 1, Key = "Fabricante", Value = "Nike"}
            }
    };

    List<Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,

            Price = 10.99,
            ProductProp = new()
            {
                new ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                new ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                new ProductProp { Id = 3, Key = "Color", Value="Purple" }
            }
        });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 13.99,
            ProductProp = new()
            {
                new ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
        });
   
    }
}
